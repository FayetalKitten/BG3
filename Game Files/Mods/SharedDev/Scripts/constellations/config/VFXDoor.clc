game.configs.VFXDoor = Config{
    params={
        DoorVFX = {
            type = EParamType.String,
            help = [[Name_UUID of vfx to play while door is open]],
            required = true,
        },
        DC = {
            type = EParamType.String,
            help = [[The skill check DC.]],
            required = false,
            default = [[HiddenPerception_Medium_cd1800ab-1b11-4c7a-9f50-fdeb8d35481f]]
        },
        SoundOff = {
            type = EParamType.String,
            help = [[Sound when trap is turned off]],
            required = false,
            default = [[PUZ_Trap_Mechanical_Off]]
        },
        Key = {
            type = EParamType.String,
            help = [[Key]],
            required = false,
            default = [[STORYLOCK]]
        },
        VFXOn = {
            type = EParamType.String,
            help = [[VFX while the trap is enabled and has been spotted.]],
            required = false,
            default = [[VFX_Script_Trap_Overlay_Red_01_a7361f25-e942-e071-7ce3-7a8182f4e0ef]]
        },
        VFXOffBone = {
            type = EParamType.String,
            help = [[Bone on which the 'VFXOff' VFX is played.]],
            required = false,
            default = [[Dummy_FX]]
        },
        Skill = {
            type = EParamType.String,
            help = [[The skill checked for discovering the container and/or its trapped nature if the 'Type' is not 'None'.]],
            required = false,
            default = [[Perception]]
        },
        VFXOnBone = {
            type = EParamType.String,
            help = [[Bone on which the 'VFXOn' VFX is played.]],
            required = false,
            default = [[Dummy_FX]]
        },
        VFXOff = {
            type = EParamType.String,
            help = [[VFX while the trap is disabled and has been spotted.]],
            required = false,
            default = [[]]
        },
        MinDistance = {
            type = EParamType.Number,
            help = [[Minimum distance that players are required to be in for the skill check. A distance of 0 disables the check.]],
            required = false,
            default = 6
        },
        StartEnabled = {
            type = EParamType.Bool,
            help = [[Does the trap start enabled? (will it trigger when using the item?)]],
            required = false,
            default = true
        },
        SoundOn = {
            type = EParamType.String,
            help = [[Sound when trap is turned on]],
            required = false,
            default = [[PUZ_Trap_Mechanical_On]]
        },
        OneShot = {
            type = EParamType.Bool,
            help = [[The trap activates only the first time on use (e.g. explodes chest), rather than every time (e.g. a chest with spikes that come out)]],
            required = false,
            default = true
        },
        Type = {
            type = EParamType.String,
            help = [[            Type of invisibility. Options:
            None: No perception logic.
            Invisible: Object is invisible until discovered
            Interactable: Object is uninteractable (like scenery) until discovered. Also hides 'trapped' state, if object is trapped.
            Trapped: Hides trapped state until discovered.
            Highlight: Object is highlighted when noticed.
            ]],
            required = false,
            default = [[None]]
        },
    },
    root=StateRef{game.roots.DefaultTrap,
        logic = StateRef{game.states.VFXDoor,
            DC = params.DC,
            DoorVFX = params.DoorVFX,
            Key = params.Key,
            MinDistance = params.MinDistance,
            OneShot = params.OneShot,
            Skill = params.Skill,
            SoundOff = params.SoundOff,
            SoundOn = params.SoundOn,
            StartEnabled = params.StartEnabled,
            Type = params.Type,
            VFXOff = params.VFXOff,
            VFXOffBone = params.VFXOffBone,
            VFXOn = params.VFXOn,
            VFXOnBone = params.VFXOnBone,
        },
    },
    inputs={
        Enable=ExtSocket{description=[[]],{SocketRef{[[root.logic.inputs.Enable]]}}},
        Disable=ExtSocket{description=[[]],{SocketRef{[[root.logic.inputs.Disable]]}}},
        Reveal=ExtSocket{description=[[]],{SocketRef{[[root.logic.inputs.Reveal]]}}},
        Close=ExtSocket{description=[[]],{SocketRef{[[root.logic.inputs.Close]]}}},
        Unlock=ExtSocket{description=[[]],{SocketRef{[[root.logic.inputs.Unlock]]}}},
        Lock=ExtSocket{description=[[]],{SocketRef{[[root.logic.inputs.Lock]]}}},
        Open=ExtSocket{description=[[]],{SocketRef{[[root.logic.inputs.Open]]}}},
    },
    outputs={
        Closing=ExtSocket{description=[[]],{SocketRef{[[root.logic.outputs.Closing]]}}},
        Opening=ExtSocket{description=[[]],{SocketRef{[[root.logic.outputs.Opening]]}}},
        Opened=ExtSocket{description=[[]],{SocketRef{[[root.logic.outputs.Opened]]}}},
        TrapTriggered=ExtSocket{description=[[]],{SocketRef{[[root.logic.outputs.Activate]]}}},
        Closed=ExtSocket{description=[[]],{SocketRef{[[root.logic.outputs.Closed]]}}},
    }
}
