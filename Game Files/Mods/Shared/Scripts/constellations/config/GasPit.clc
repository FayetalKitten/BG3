game.configs.GasPit = Config{
    params={
        VFXOff = {
            type = EParamType.String,
            help = [[VFX while item is off.]],
            required = false,
            default = [[]]
        },
        MaxRadius = {
            type = EParamType.Number,
            help = [[Maximum radius of the gas pit]],
            required = false,
            default = 3
        },
        WeightLimit = {
            type = EParamType.Number,
            help = [[Max Weight before the gaspit is blocked]],
            required = false,
            default = 50
        },
        MinDistance = {
            type = EParamType.Number,
            help = [[Minimum distance that players are required to be in for the skill check. A distance of 0 disables the check.]],
            required = false,
            default = 6
        },
        VFXOn = {
            type = EParamType.String,
            help = [[VFX while item is on.]],
            required = false,
            default = [[VFX_Script_Trap_Overlay_Red_01_a7361f25-e942-e071-7ce3-7a8182f4e0ef]]
        },
        PerceptionSkill = {
            type = EParamType.String,
            help = [[The skill checked for perception.]],
            required = false,
            default = [[Perception]]
        },
        MinRadius = {
            type = EParamType.Number,
            help = [[Minimum radius of the gas pit]],
            required = false,
            default = 0
        },
        SoundOn = {
            type = EParamType.String,
            help = [[Sound when trap is turned on]],
            required = false,
            default = [[PUZ_Trap_Mechanical_On]]
        },
        DC = {
            type = EParamType.String,
            help = [[Perception check DC.]],
            required = false,
            default = [[DC_Legacy_15_bddbb9b8-a242-4c3e-a2eb-3fd274c0c539]]
        },
        TimeStep = {
            type = EParamType.Number,
            help = [[Time, in seconds, between every step]],
            required = false,
            default = 0.5
        },
        PerceptionType = {
            type = EParamType.String,
            help = [[Type of invisibility. Options:
            None: No perception logic.
            Invisible: Object is invisible until discovered
            Interactable: Object is uninteractable (like scenery) until discovered. Also hides 'trapped' state, if object is trapped.
            Trapped: Hides trapped state until discovered.
            Highlight: Object is highlighted when noticed.
            ]],
            required = false,
            default = [[Invisible]]
        },
        RadiusStep = {
            type = EParamType.Number,
            help = [[Step by which the surface increases every step.]],
            required = false,
            default = 0.5
        },
        SoundOff = {
            type = EParamType.String,
            help = [[Sound when trap is turned off]],
            required = false,
            default = [[PUZ_Trap_Mechanical_Off]]
        },
        SurfaceType = {
            type = EParamType.String,
            help = [[Surface type]],
            required = true,
            default_value_provider = [[surfacetype]]
        },
        StartEnabled = {
            type = EParamType.Bool,
            help = [[Does the gaspit start on?]],
            required = false,
            default = true
        },
    },
    root=StateRef{game.roots.DefaultTrap,
        logic = StateRef{game.states.GasPit,
            DC = params.DC,
            MaxRadius = params.MaxRadius,
            MinDistance = params.MinDistance,
            MinRadius = params.MinRadius,
            PerceptionSkill = params.PerceptionSkill,
            PerceptionType = params.PerceptionType,
            RadiusStep = params.RadiusStep,
            SoundOff = params.SoundOff,
            SoundOn = params.SoundOn,
            StartEnabled = params.StartEnabled,
            SurfaceType = params.SurfaceType,
            TimeStep = params.TimeStep,
            WeightLimit = params.WeightLimit,
        },
    },
    inputs={
        Enable=ExtSocket{description=[[Enable the gaspit (will create surface when activated)]],{SocketRef{[[root.logic.inputs.Enable]]}}},
        Reveal=ExtSocket{description=[[Reveal the gaspit]],{SocketRef{[[root.logic.inputs.Reveal]]}}},
        Disable=ExtSocket{description=[[Disable the gaspit (don't create surface when activated, and stop creating surfaces if currently active)]],{SocketRef{[[root.logic.inputs.Disable]]}}},
    }
}
