game.states.MOO_KitchenFight_Barnabus = State{function ()
    description = [[Barnabus waits by Gnoll Master till dialog is done]]

    modules = { "shared.moveto" }

    params.idlePosition = {type = EParamType.String, required = true, help = [[Position where the gnoll stands when idle]]}
    params.chorePositions = {type = EParamType.String, arrayRange = "..", required = false, help = [[Position where the gnoll should perform a chore]]}
    params.choreAnimation = {type = EParamType.String, required = false, help = [[Chore the gnoll will be performing]]}
    params.choreAnimation_WorldBehaviour = {type = EParamType.String, required = false, help = [[Chore the gnoll will be performing (world behaviour)]]}
    params.choreAnimation_SceneTrigger = {type = EParamType.String, required = false, help = [[Scene trigger for the chore the gnoll will be performing (world behaviour)]]}
    params.lookAtTarget = {type = EParamType.String, required = false, help = [[Target the gnoll will look at while working]]}
    params.choreRequiresMeat = {type = EParamType.Bool, required = false, default = false, help = [[This chore animation requires the meat to be in position.]]}

    local gnollMaster = Entity("S_MOO_Kitchen_GnollMaster_627dfc1c-56e1-4e56-9920-56e381e72c53")
    local idlePoint = Entity("S_MOO_Kitchen_DanceSpot_50690406-1668-41bc-b22c-6ae185283920")
    local seenPowerFlag = Flag("MOO_KitchenFight_State_SeenPower_3b191e8a-0e5f-44d9-3c13-330ebfaef5d9")

    nodes.GnollMasterDialog = Action {
        CanEnter = function()
            return not GetFlag(seenPowerFlag) and not gnollMaster.Character.IsDead
        end,

        function()
            if mod.moveto.MoveToPoint(idlePoint,  MovementSpeed.Walk, me) then
                SteerTo(gnollMaster)
            else
                SteerTo(gnollMaster)
            end
            Sleep(1)
        end
    }

    nodes.Routine = Proxy {
        game.states.MOO_KitchenFight_Gnoll,
        params = {
            idlePosition = params.idlePosition,
            chorePositions = params.chorePositions,
            choreAnimation = params.choreAnimation,
            choreAnimation_WorldBehaviour = params.choreAnimation_WorldBehaviour,
            choreAnimation_SceneTrigger = params.choreAnimation_SceneTrigger,
            choreRequiresMeat = params.choreRequiresMeat,
            lookAtTarget = params.lookAtTarget
        }
    }

end
}