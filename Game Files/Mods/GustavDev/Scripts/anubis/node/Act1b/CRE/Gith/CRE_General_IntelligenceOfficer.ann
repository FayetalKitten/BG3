game.states.CRE_General_IntelligenceOffier = State 
{
    function()
    description = [[Intelligence officer's behaviour]]
    modules = {"shared.dialog", "shared.util"}

    ------------------------------------------------
    -- Params

    params.DefaultPos = {
        type = EParamType.String,
        required = true,
        help=[[Default position for the character to be in]]
    }
    ------------------------------------------------

    ------------------------------------------------
    -- Local State variables
    local defaultPos = Entity(params.DefaultPos)

    ------------------------------------------------ 

    ------------------------------------------------
    -- Helper functions
    ------------------------------------------------
 
    ------------------------------------------------
    -- State (self) node functions
    ------------------------------------------------
    
    ------------------------------------------------
    -- Nodes

    -- Action
    nodes.Action_BackToPosition = Action 
    {
        function ()        
            mod.util.SleepRandom (1.0,2.0)
            if IsInDangerousSurfaceFor(defaultPos, me.Character) then
                SteerTo(defaultPos)
                Sleep(2.0)
                return
            end

            local moveResult = MoveTo(defaultPos, MovementSpeed.Walk, true, false, 2, 3.5, false)
            if moveResult ~= error.MovementError.None then
                SteerTo(defaultPos)
                Sleep(2.0)
                return false
            end

            LookFrom(defaultPos)

        end,

        Valid = function()
            return GetDistanceTo(me, defaultPos) > 1.0
        end
    }

    -- Action
    nodes.Action_StandingGuard = Action
    {
        function ()
            WaitForInterrupt()
        end,

        Valid = function()
            return GetDistanceTo(me, defaultPos) <= 1.0
        end
    }

    ------------------------------------------------
    -- Events
    ------------------------------------------------

end
}