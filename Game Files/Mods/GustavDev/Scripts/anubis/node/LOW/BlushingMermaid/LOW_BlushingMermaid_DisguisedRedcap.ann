game.states.LOW_BlushingMermaid_DisguisedRedcap = State{function()
    
    modules = {"shared.dialog"}

    params.idleAD = {type=EParamType.String, required = false, default=nil, help=[[Idle AD]]}
    local idleAD = Dialog(params.idleAD)

    params.idleAnimation = {type=EParamType.String, required = false, default=nil, help=[[Idle AD]]}
    local idleAnimation = Animation(params.idleAnimation)

    params.triggerString = {type=EParamType.String, required = false, default=nil, help=[[Idle Trigger]]}
    local triggerString = params.triggerString
    local trigger

    local singer_2 = Entity("S_LOW_BlushingMermaid_DisguisedRedcap_02_ba363354-3341-41e9-ae92-c3fe8a07a9ea")
    local singer_3 = Entity("S_LOW_BlushingMermaid_DisguisedRedcap_03_76784911-9f0d-48f6-8e0d-b609345b2be2")
    local singer_4 = Entity("S_LOW_BlushingMermaid_DisguisedRedcap_04_9f218fa2-418d-46ee-b38d-1708f25314ec")
    local singer_5 = Entity("S_LOW_BlushingMermaid_DisguisedRedcap_05_357299a8-b8c2-4b99-92f8-761fd697c435")
    local singer_6 = Entity("S_LOW_BlushingMermaid_DisguisedRedcap_06_8a9a0273-3a3b-47ee-b362-5b83903458fb")

    self.OnInit = function()
        trigger = Entity(triggerString)
    end

    nodes.Idle = Action{        
        function()
            LookFrom(trigger)
            Sleep(math.random(1.0,4.0))
            PlayAnimation(idleAnimation,false,true)
            if(idleAD ~= nil) then
                -- The timeline is disabled in the AD
                mod.dialog.StartCheckedAutomatedDialogRateLimited(
                    idleAD,
                    {
                        maxDistance = 100.0,
                        checkSight = false,
                        waitForCompletion = true,
                        minDelay = 5,
                        allowNilSpeakers = true
                    },
                    me,
                    mod.dialog.IsSpeakerAvailable(singer_2) and singer_2 or nil,
                    mod.dialog.IsSpeakerAvailable(singer_3) and singer_3 or nil,
                    mod.dialog.IsSpeakerAvailable(singer_4) and singer_4 or nil,
                    mod.dialog.IsSpeakerAvailable(singer_5) and singer_5 or nil,
                    mod.dialog.IsSpeakerAvailable(singer_6) and singer_6 or nil
                )
            end            
        end,

        Valid = function()
            return GetDistanceTo(me, trigger) <= 2.0
        end
    }

    nodes.StandAtTrigger = Proxy {
        game.states.GLO_StandAtTrigger,
        params = {
            trigger = triggerString
        }
    }
end}